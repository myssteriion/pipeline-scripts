void runBuild(String gitRoot, String projectRoot, String jdk, String mvn, String targetDirectory, String sourceAppDirectory, String sourceConfDirectory) {
	
	sh "mkdir -p ${gitRoot}"

	dir ("${gitRoot}") {
		checkoutRevisionOnRepo(gitRoot)
		mvnCleanInstall(projectRoot, jdk, mvn)
		deploy(projectRoot, targetDirectory, sourceAppDirectory, sourceConfDirectory)
	}
}

void checkoutRevisionOnRepo(String gitRoot) {
	checkout scm: [ $class: "GitSCM", 
					userRemoteConfigs: [ [url: env.gitLabUrl+gitRoot, credentialsId: "root"] ],
					branches: [ [name: params.revision] ]
				  ], poll: false
}

void mvnCleanInstall(String projectRoot, String jdk, String mvn) {
	dir ("${projectRoot}") {
		withMaven (jdk: jdk, maven: mvn) {
			sh "mvn clean install"
		}
	}
}

void deploy(String projectRoot, String targetDirectory, String sourceAppDirectory, String sourceConfDirectory) {

	script {
		
		if (targetDirectory && targetDirectory != "") {
			sh "ssh ${env.remoteConnexion} rm -rf ${env.depotFolder}/${params.revision}/${env.esiiAppFolder}/${targetDirectory}"
			sh "ssh ${env.remoteConnexion} rm -rf ${env.depotFolder}/${params.revision}/${env.esiiConfFolder}/${targetDirectory}"
		
			if (sourceAppDirectory && sourceAppDirectory != "") {
				sh "ssh ${env.remoteConnexion} mkdir -p ${env.depotFolder}/${params.revision}/${env.esiiAppFolder}/${targetDirectory}"
				sh "scp ${projectRoot}/${sourceAppDirectory}/*.war ${env.remoteConnexion}:${env.depotFolder}/${params.revision}/${env.esiiAppFolder}/${targetDirectory}"
				sh "ssh ${env.remoteConnexion} unzip ${env.depotFolder}/${params.revision}/${env.esiiAppFolder}/${targetDirectory}/*.war -d ${env.depotFolder}/${params.revision}/${env.esiiAppFolder}/${targetDirectory}/"
				sh "ssh ${env.remoteConnexion} rm -f ${env.depotFolder}/${params.revision}/${env.esiiAppFolder}/${targetDirectory}/*.war"
			}
			if (sourceConfDirectory && sourceConfDirectory != "") {
				sh "ssh ${env.remoteConnexion} mkdir -p ${env.depotFolder}/${params.revision}/${env.esiiConfFolder}/${targetDirectory}"
				sh "scp -r ${projectRoot}/${sourceConfDirectory}/* ${env.remoteConnexion}:${env.depotFolder}/${params.revision}/${env.esiiConfFolder}/${targetDirectory}"
			}
		}
	}
}