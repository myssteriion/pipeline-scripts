void runBuild(String gitRoot, String projectRoot, String jdkCompilation, String mvnVersion, String targetDirectory, String sourceAppDirectory, String sourceExtension, String sourceConfDirectory) {
	sh "mkdir -p ${gitRoot}"
	checkoutRevisionOnRepo(gitRoot)
	dir ("${projectRoot}") {
		mvnCleanInstall(projectRoot, jdkCompilation, mvnVersion)
	}
}

void checkoutRevisionOnRepo(String gitRoot) {
	checkout scm: [ $class: "GitSCM", 
					userRemoteConfigs: [ [url: env.gitLabUrl+gitRoot, credentialsId: "root"] ],
					branches: [ [name: params.revision] ]
				  ], poll: false
}

void mvnCleanInstall(String projectRoot, String jdkCompilation, String mvnVersion) {
	withMaven (jdk: jdkCompilation, maven: mvnVersion) {
		sh "mvn clean install -P ${params.mavenProfile}"
	}
}

void cleanPrimaryRemote() {
	sh "ssh ${env.primaryRemote} rm -rf ${env.depotFolder}/${params.revision}/${params.mavenProfile}"
}

void cleanProjectPrimaryRemote(String targetDirectory) {
	script {
		if (targetDirectory && targetDirectory != "") { 
			sh "ssh ${env.primaryRemote} rm -rf ${env.depotFolder}/${params.revision}/${params.mavenProfile}/ESII-Applications/app/${targetDirectory}" 
			sh "ssh ${env.primaryRemote} rm -rf ${env.depotFolder}/${params.revision}/${params.mavenProfile}/ESII-Applications/conf/${targetDirectory}" 
		}
	}
}
				
void deployApp(String projectRoot, String targetDirectory, String sourceAppDirectory, String sourceExtension) {
	script {
		if (targetDirectory && targetDirectory != "") {
			if (sourceAppDirectory && sourceAppDirectory != "") {
				sh "scp ${projectRoot}/${sourceAppDirectory}/*${sourceExtension} ${env.primaryRemote}:${env.depotFolder}/${params.revision}/${params.mavenProfile}/ESII-Applications/app/${targetDirectory}"
				sh returnStatus: true, script: "ssh ${env.primaryRemote} unzip -qq -o ${env.depotFolder}/${params.revision}/${params.mavenProfile}/ESII-Applications/app/${targetDirectory}/*${sourceExtension} -d ${env.depotFolder}/${params.revision}/${params.mavenProfile}/ESII-Applications/app/${targetDirectory}/"
				sh "ssh ${env.primaryRemote} rm -f ${env.depotFolder}/${params.revision}/${params.mavenProfile}/ESII-Applications/app/${targetDirectory}/*${sourceExtension}"
			}
			else {
				sh "ssh ${env.primaryRemote} rm -rf ${env.depotFolder}/${params.revision}/${params.mavenProfile}/ESII-Applications/app/${env.targetDirectory}"
			}
		}
	}
}

void deployConf(String projectRoot, String targetDirectory, String sourceConfDirectory) {
	script {
		if (targetDirectory && targetDirectory != "") {
			if (sourceConfDirectory && sourceConfDirectory != "") {
				sh "scp -r ${projectRoot}/${sourceConfDirectory}/* ${env.primaryRemote}:${env.depotFolder}/${params.revision}/${params.mavenProfile}/ESII-Applications/conf/${targetDirectory}"
			}
			else {
				sh "ssh ${env.primaryRemote} rm -rf ${env.depotFolder}/${params.revision}/${params.mavenProfile}/ESII-Applications/conf/${env.targetDirectory}"
			}
		}
	}
}

void deployToSecondaryRemote(String secondaryRemote) {
	sh "ssh ${secondaryRemote} \"rm -rf ESII-Applications && mkdir -p ESII-Applications\""
	
	sh "scp -r ${env.primaryRemote}:${env.depotFolder}/${params.revision}/${params.mavenProfile}/ESII-Applications.gz ${secondaryRemote}:"
	sh "ssh ${secondaryRemote} tar -xf ESII-Applications.gz"
	
	sh "ssh ${secondaryRemote} rm -rf ESII-Applications.gz"
}